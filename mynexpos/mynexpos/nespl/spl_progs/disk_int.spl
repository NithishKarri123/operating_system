// breakpoint;
//UPTR set to Stack Ptr
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 5*CORE + 1] * 16) + 13] = SP;

//Stack Pointer set to bottom UA Page No.
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 5*CORE + 1] * 16) + 11] * 512 - 1;

backup;

// Aquire the kernel lock
R1 = 1;
call ACCESS_CONTROL;

//Set status of Disk Status Table as Free
[ DISK_STATUS_TABLE + 0 ] = 0;

//Setting States to READY

alias index R1;

index=1;
while( index != 16 )do
    if ( [PROCESS_TABLE + ( index * 16 ) + 4] == WAIT_DISK) then
        [PROCESS_TABLE + ( index * 16 ) + 4] = READY;
    endif;
    index = index + 1;
endwhile;

// Release the Kernel lock
R1 = 4;
R2 = KERN_LOCK;
call ACCESS_CONTROL;


restore;

SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 5*CORE + 1] * 16) + 13];
// breakpoint;
ireturn;
