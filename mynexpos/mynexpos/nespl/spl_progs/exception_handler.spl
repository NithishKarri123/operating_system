


//Set MODE Flag to -1
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 5*CORE + 1] * 16 + 9] = -1;


//UPTR set to Stack Ptr
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 5*CORE + 1] * 16) + 13] = SP;

//Stack Pointer set to bottom UA Page No.
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 5*CORE + 1] * 16) + 11] * 512 - 1;

backup;
multipush(EIP);

alias userSP R1;
userSP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 5*CORE + 1] * 16) + 13];

alias ptbr R2;

ptbr = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 5*CORE + 1] * 16) + 14];

if ( EC != 0 || userSP == [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 5*CORE + 1]*16)+ 15]*512-1 )then
    if ( userSP == ((PTLR * 512) - 1) )then
        print "UsrStack";
    endif; 
    if ( EC == 1 )then
        print "II";
    endif;
    if ( EC == 2 )then
        print "IMA";
    endif;
    if ( EC == 3 )then
        print "ArithExc";
    endif;
    print "Error";
    
    
    multipush(R0,R1,R2,SP,PTBR,PTLR);
    R1 = 3;
    R2 = [SYSTEM_STATUS_TABLE + 5*CORE + 1];
    call PROCESS_MANAGER;
    multipop(R0,R1,R2,SP,PTBR,PTLR);

    // breakpoint;
    multipush(R1,R2,SP,PTBR,PTLR);
    call SCHEDULER;
    multipop(R1,R2,SP,PTBR,PTLR);

else

    multipush(R1,R2,EC,EPN,EIP,EMA);
    R1 = ACQUIRE_KERN_LOCK;
    call ACCESS_CONTROL;
    multipop(R1,R2,EC,EPN,EIP,EMA);


    if ( EPN == 4 || EPN == 5 || EPN == 6 || EPN == 7)then
        multipush(R1,R2,EIP,EC,EPN,EMA);
        R1 = 5;
        R2 = [ DISK_MAP_TABLE + [SYSTEM_STATUS_TABLE + 5*CORE + 1]*10 + EPN];
        call MEMORY_MANAGER;
        multipop(R1,R2,EIP,EC,EPN,EMA);

        [ptbr + EPN*2]  = R0;
        [ptbr + EPN*2 + 1] = "1100";
    else
        // breakpoint;
        
        multipush(R1,R2,R3,EIP,EC,EPN,EMA);
        R1 = 1;
        call MEMORY_MANAGER;
        [ptbr + 4]  = R0;
        [ptbr + 5]  = "1110";

        R1 = 1;
        call MEMORY_MANAGER;
        [ptbr + 6]  = R0;
        [ptbr + 7]  = "1110";
        multipop(R1,R2,R3,EIP,EC,EPN,EMA);
    endif;

    multipush(R1,R2,R3,R4,R5,EIP,EC,EPN,EMA);
    R1 = 4;
    R2 = KERN_LOCK;
    call ACCESS_CONTROL;
    multipop(R1,R2,R3,R4,R5,EIP,EC,EPN,EMA);


endif;
//Set MODE Flag to 0
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 5*CORE + 1] * 16 + 9] = 0;

multipop(EIP);

restore;


//Change back to User Stack
// breakpoint;
SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 5*CORE + 1] * 16) + 13];
SP = SP + 1;

[[[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 5*CORE + 1] * 16) + 14] + 2*((SP)/512)] * 512 + ((SP)%512)] = EIP;

// [[PTBR + 2*(SP/512)]*512 + SP%512] = EIP;

// breakpoint;
ireturn;